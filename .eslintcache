[{"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\index.js":"1","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\App.js":"2","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\reportWebVitals.js":"3","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\Dog\\Dog.js":"4","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\functions\\requests.js":"5","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\DogList\\DogList.js":"6","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\DogButtons\\DogButtons.js":"7","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\DogBreed\\DogBreed.js":"8","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\SpecificDogBreed\\SpecificDogBreed.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":195,"mtime":1607652160259,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2434,"mtime":1607712264681,"results":"14","hashOfConfig":"11"},{"size":1291,"mtime":1607702930901,"results":"15","hashOfConfig":"11"},{"size":1117,"mtime":1607722149642,"results":"16","hashOfConfig":"11"},{"size":1141,"mtime":1607642620988,"results":"17","hashOfConfig":"11"},{"size":780,"mtime":1607717400492,"results":"18","hashOfConfig":"11"},{"size":694,"mtime":1607722188110,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15vsqvd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\index.js",[],["42","43"],"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\App.js",["44"],"import \"./App.css\";\nimport Dog from \"./Components/Dog/Dog\";\nimport axios from \"axios\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Dog />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\reportWebVitals.js",[],"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\Dog\\Dog.js",["45","46","47","48"],"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\functions\\requests.js",[],"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\DogList\\DogList.js",["49","50"],"C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\DogButtons\\DogButtons.js",["51"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction DogButtons({ handleClick, handleChange, axiosAllBreeds }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"dogButtons\">\r\n      <div className={classes.root}>\r\n        <div className=\"dogButtons__formGroup\">\r\n          <h3>Drop Down</h3>\r\n\r\n          <select onChange={handleChange}>\r\n            {/* {breedList\r\n              ? Object.keys(breedList).map((breed) => <option key={breed}>{breed}</option>)\r\n              : \"data is loading\"} */}\r\n            {axiosAllBreeds\r\n              ? axiosAllBreeds.map((item) => (\r\n                  <option key={item.name}>{item.name}</option>\r\n                ))\r\n              : null}\r\n          </select>\r\n        </div>\r\n\r\n        <Button variant=\"contained\" onClick={handleClick}>\r\n          Search Random Dog\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DogButtons;\r\n","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\DogBreed\\DogBreed.js",["52"],"import React from \"react\";\r\nimport \"./DogBreed.css\";\r\n\r\nfunction DogBreed({ id, url, newBreed }) {\r\n  return (\r\n    <div className=\"dogBreed\">\r\n     \r\n        <img src={url} alt=\"dog image\" />\r\n      \r\n\r\n      {newBreed\r\n        ? newBreed.map((breed) => (\r\n            <div className=\"dogBreed__bottom\" key={breed.id}>\r\n              <h1>{breed.name}</h1>\r\n              <h2>{breed.breed_group} Dog</h2>\r\n              <h3>\r\n                Bred For: <span>{breed.bred_for}</span>\r\n              </h3>\r\n              <h3>\r\n                Breed Temperament: <span>{breed.temperament}</span>\r\n              </h3>\r\n              <h3>Life span: <span>{breed.life_span}</span></h3>\r\n            </div>\r\n          ))\r\n        : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DogBreed;\r\n","C:\\Users\\robyo\\Documents\\React\\dog-api-fun\\src\\Components\\SpecificDogBreed\\SpecificDogBreed.js",["53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":22},{"ruleId":"58","severity":1,"message":"63","line":11,"column":10,"nodeType":"60","messageId":"61","endLine":11,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":20,"column":13,"nodeType":"66","endLine":36,"endColumn":4},{"ruleId":"67","severity":1,"message":"68","line":53,"column":40,"nodeType":"66","messageId":"69","endLine":53,"endColumn":42},{"ruleId":"58","severity":1,"message":"70","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"71","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":24},{"ruleId":"58","severity":1,"message":"70","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":8,"column":9,"nodeType":"74","endLine":8,"endColumn":42},{"ruleId":"72","severity":1,"message":"73","line":7,"column":7,"nodeType":"74","endLine":7,"endColumn":42},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'axiosGetBreedByName' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.findIndex() expects a return value from arrow function.","expectedInside","'useState' is defined but never used.","'getBreedImages' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]